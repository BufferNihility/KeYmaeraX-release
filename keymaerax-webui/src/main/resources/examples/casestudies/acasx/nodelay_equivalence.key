\programVariables {
  /** Variables **/
   /* horizontal */
  R r;    // relative distance in ft; xi - xo
          // x = r
  R rv;   // relative speed -(vi - vo)
   /* vertical */
  R h;    // relative altitude in ft
          // if negative: the intruder is lower than the ownship
          // h := hi - ho
          // z = h
  R dhd;  // vertical velocity of ownship
  R dhf;  // target minimum velocity
  R w;    // velocity bound 1 = lower, -1 = upper
  R ao; // vertical acceleration of ownship
  /** Constants **/
  R hp;   // puck height
  R rp;   // puck radius
  R a;    // minimal vertical acceleration. Typically g/4
  /** possible positions of the virtual ownship in the future,
      wrt the current position of the ownship **/
  R t;
  R ro;
  R ho;
}

\problem {
hp > 0 & rp > 0 & rv >= 0 & a > 0 & (w=1 | w=-1) -> (
(
  ((w * dhf >= 0) ->
    ((-rp <= r) & (r  <  -rp - rv * Min(0, w * dhd) / a) ->
        (w * rv^2 * (h) < a / 2 * (r + rp)^2 +
                           w * rv * dhd * (r + rp) - rv^2 * hp))
    &
    ((-rp - rv * Min(0, w * dhd) / a <= r) &
     (r <= rp - rv * Min(0, w * dhd) / a) ->
        (w * (h)  <  (- Min(0, w * dhd)^2) / (2 * a) - hp))
    &
    ((rp - rv * Min(0, w * dhd) / a  <  r) &
     (r <= rp + rv * Max(0, w * (dhf - dhd)) / a) ->
        (w * rv^2 * (h)  <  a / 2 * (r - rp)^2 +
                           w * rv * dhd * (r - rp) - rv^2 * hp))
    &
    ((rp + rv * Max(0, w * (dhf - dhd)) / a  <  r) ->
        (rv = 0) |
        (w * rv * (h)  <  w * dhf * (r - rp)
               - rv * Max(0, w * (dhf - dhd))^2 / (2 * a) - rv * hp))
  )
  &
  ((w * dhf < 0) ->
    ((-rp <= r) &
     (r < -rp + rv * Max(0, w * (dhf - dhd)) / a) ->
        (w * rv^2 * (h)  <  a / 2 * (r + rp)^2
                         + w * rv * dhd * (r + rp) - rv^2 * hp))
    &
    ((-rp + rv * Max(0, w * (dhf - dhd)) / a  <=  r) ->
        (rv = 0 & r > rp) |
        (w * rv * (h)  <  w * dhf * (r + rp)
               - rv * Max(0, w * (dhf - dhd))^2 / (2 * a) - rv * hp))
  )
) <->
(
  \forall R t. \forall R ro. \forall R ho.
  ((0 <= t & t < Max(0, w * (dhf - dhd)) / a &
    ro = rv * t & ho = (w * a) / 2 * t^2 + dhd * t) |
   (t >=  Max(0, w * (dhf - dhd)) / a &
    ro = rv * t & ho = dhf * t - w * Max(0, w * (dhf - dhd))^2 / (2*a))
   -> (Abs(r - ro) > rp | w * h < w * ho - hp))
)
)
}