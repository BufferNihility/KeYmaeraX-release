/*
 * KeYmaera Axioms
 * @author Nathan Fulton
 * @author Jan-David Quesel
 * 
 * Basic dL Axioms
 */
Variables.
  T s.
  T t.
  P alpha.
  P beta.
  F phi.
  F H.
  F psi.
End.

Axiom "[;] compose".
  \[ alpha; beta \]phi <-> \[alpha\]\[beta\]phi.
End.

Axiom "<;> compose".
  \< alpha; beta \>phi <-> \<alpha\>\<beta\>phi.
End.

Axiom "<++> choice".
  \<alpha\>phi | \<beta\>phi <-> \<alpha ++ beta\>phi.
End.

Axiom "[++] choice".
  \[alpha\]phi & \[beta\]phi <-> \[alpha ++ beta\]phi.
End.

Axiom "<*n> unwind".
  phi | \<alpha\> \<alpha*\> phi <-> \<alpha*\>phi.
End.

Axiom "[*n] unwind".
  phi & \[alpha\] \[alpha*\] phi <-> \[alpha*\]phi.
End.

Axiom "[*n] induction".
  phi & \[alpha*\](phi -> \[alpha\] phi) -> \[alpha*\]phi
End.

/*
// \forall {alpha} quantifies over all variables written in alpha
// not sure if this can be an axiom or needs to be a built-in rule
// since it's hard to get this working with uniform substitution
Axiom "Generalize".
  \forall {alpha}. phi -> \[alpha\] phi
End.
*/

Axiom "<?> test".
  H & psi <-> \<?H\>psi.
End.

Axiom "[?] test".
  (H -> psi) <-> \[?H\]psi.
End.

/*
Axiom "Forall-Quantifier Scope".
  (\forall x. (p(x) & q)) <-> ((\forall x. p(x)) & q)
End.
*/

Axiom "Inverse Barcan".
  (\[alpha\] \forall x. p(x)) -> \forall x. \[alpha\] p(x)
End.

Axiom "Derive &".
  (phi & psi)' <-> (phi' & psi')
End.

Axiom "Derive |".
  (phi | psi)' <-> (phi' & psi')
End.

Axiom "Derive Sum".
  (s + t)' = s' + t'
End.

Axiom "Derive Product".
  (s * t)' = (s'*t) + (s*t')
End.

Axiom "Derive Quotient".
  (s / t)' = ((s'*t) - (s*t')) / t^2
End.

/*
Axiom "Derive Monomial".
	(x^n)' = n*x^(n-1)
End.
*/
